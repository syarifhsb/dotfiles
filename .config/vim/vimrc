" Keybinds
so $XDG_CONFIG_HOME/vim/keybind.vim
so $XDG_CONFIG_HOME/vim/plugs.vim
so $XDG_CONFIG_HOME/vim/lsp.vim

" Plugin
" Colorscheme gruvbox
autocmd vimenter * ++nested colorscheme gruvbox
set background=dark    " Setting dark mode
let g:gruvbox_contrast_dark='medium'

let g:lsp_use_native_client=1

" Basic
syntax on
set relativenumber number
set encoding=utf-8
" set fileencoding=utf-8
" set termencoding=utf-8
set ic
set hlsearch
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2
set ruler
set nowrapscan
set noeb vb t_vb=
set splitbelow
set splitright
set backspace=indent,eol,start
set wildmenu wildmode=longest:full,full wildoptions=pum
set mouse=a
autocmd VimEnter  * silent exec "! echo -ne '\e[2 q'"
autocmd VimResume * silent exec "! echo -ne '\e[2 q'"
runtime ftplugin/man.vim
let g:ft_man_open_mode = 'vert'
let g:markdown_recommended_style = 0 " avoid markdown ftplugin set tabs to 4 spaces

command! MakeTags !ctags -R .

let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.6, 'relative': v:false } }
function ClearQuickfixList()
  call setqflist([])
endfunction
command! ClearQuickfixList call ClearQuickfixList()

nnoremap <leader>vx :Vex<CR>:vert resize 30<CR>

" XDG Base Directory Configuration - Begin
set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after

set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

let g:netrw_home = $XDG_DATA_HOME."/vim"
call mkdir($XDG_DATA_HOME."/vim/spell", 'p')

set backupdir=$XDG_STATE_HOME/vim/backup | call mkdir(&backupdir, 'p')
set directory=$XDG_STATE_HOME/vim/swap   | call mkdir(&directory, 'p')
set undodir=$XDG_STATE_HOME/vim/undo     | call mkdir(&undodir,   'p')
set viewdir=$XDG_STATE_HOME/vim/view     | call mkdir(&viewdir,   'p')

if !has('nvim') | set viminfofile=$XDG_STATE_HOME/vim/viminfo | endif
" XDG Base Directory Configuration - End

" Run Prettier autoformat on save
let g:prettier#autoformat=1
let g:prettier#autoformat_require_pragma=0

" Fugitive autocmd, delete fugitive buffer after leaving the buffer
if has("autocmd")
  autocmd BufReadPost fugitive://* set bufhidden=delete
endif

" Emmet only on insert mode
let g:user_emmet_mode='i'
let g:user_emmet_leader_key='<C-Z>'
autocmd FileType javascript,typescript,javascriptreact,typescriptreact EmmetInstall

" Override Rg command
" Do not take .gitignore into account
command!      -bang -nargs=* Rg
  \ call fzf#vim#grep("rg --column --line-number --no-heading --color=always --smart-case --no-ignore -- ".fzf#shellescape(<q-args>), fzf#vim#with_preview(), <bang>0)',


